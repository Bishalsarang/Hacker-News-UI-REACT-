{"version":3,"sources":["assets/images/loader.svg","shared/Header/index.js","shared/Main/index.js","shared/Footer/index.js","services/API/index.js","components/common/Loader/index.js","components/NewsList/NewsItem/index.js","constants/constants.js","components/NewsList/Pagination/index.js","components/CommentsList/CommentItem/index.js","components/CommentsList/index.js","components/common/Modal/index.js","components/NewsList/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","children","Main","Footer","fetchUrl","url","a","response","fetch","json","console","log","Loader","style","textAlign","src","loader","alt","NewsItem","handleCommentClick","setCurrentNewsId","state","detail","fetchNewsDetail","setState","isLoading","API","id","then","this","width","title","by","kids","score","href","class","onClick","length","Component","Pagination","handlePrevClick","currentPageNumber","handleNextClick","CommentItem","text","dangerouslySetInnerHTML","__html","CommentsList","fetchComments","map","comment","comments","key","Modal","handleModalClick","e","target","includes","isVisible","body","NewsList","fetchNews","newsIdList","handlePageNav","offset","selectedItem","pageNumber","height","slice","newsId","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9c5fb811.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.236d70a3.svg\";","import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nconst Header = props => {\r\n  return (\r\n    <header className=\"Header\">\r\n      <h1>{props.children}</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Main = props => {\r\n  return <main className={`\"Main\" ${props.className}`}>{props.children}</main>;\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return <footer className=\"Footer\"></footer>;\r\n};\r\n\r\nexport default Footer;\r\n","const fetchUrl = async url => {\r\n  let response = null;\r\n  try {\r\n    response = await fetch(url);\r\n    return response.json();\r\n  } catch {\r\n    console.log('Unable to fetch');\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default { fetchUrl };\r\n","import React from 'react';\r\nimport loader from '../../../assets/images/loader.svg';\r\nimport './style.css';\r\n\r\nconst Loader = props => {\r\n  return (\r\n    <div\r\n      // className=\"loader\"\r\n      // style={{ width: props.width, height: props.height }}\r\n      style={{ textAlign: 'center' }}\r\n    >\r\n      <img src={loader} alt=\"Loading\" style={props.style}></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\n\r\nimport API from '../../../services/API';\r\nimport * as constant from '../../../constants/constants';\r\nimport Loader from '../../../components/common/Loader';\r\n\r\nimport './style.css';\r\n\r\nclass NewsItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: this.props.id,\r\n      isLoading: false,\r\n      detail: null,\r\n    };\r\n  }\r\n\r\n  handleCommentClick = () => {\r\n    this.props.setCurrentNewsId(this.state.detail);\r\n  };\r\n\r\n  fetchNewsDetail = () => {\r\n    this.setState({ isLoading: true });\r\n    API.fetchUrl(`${constant.STORY_PATH}${this.state.id}.json`).then(response =>\r\n      this.setState({\r\n        isLoading: false,\r\n        detail: response,\r\n      })\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchNewsDetail();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.detail) {\r\n      return (\r\n        <li className=\"NewsItem\">\r\n          <Loader style={{ width: '50px', textAlign: 'center' }} />\r\n        </li>\r\n      );\r\n    }\r\n    const { url, title, by, kids, score } = this.state.detail;\r\n    return (\r\n      <li className=\"NewsItem\">\r\n        <div>\r\n          <p>\r\n            <a href={url}>{title}</a>\r\n          </p>\r\n          <span className=\"NewsItem__author\">\r\n            <i class=\"fas fa-user\"></i> {by}\r\n          </span>\r\n          <span className=\"NewsItem__points\">\r\n            <i class=\"fas fa-star\"></i>({score})\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"NewsItem__info\">\r\n          <button\r\n            className=\"NewsItem__comments\"\r\n            onClick={this.handleCommentClick}\r\n          >\r\n            <i class=\"fas fa-comment-alt\"></i>\r\n            {` (${kids ? kids.length : 0})`}\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewsItem;\r\n","export const ITEMS_PER_PAGE = 50;\r\n\r\nexport const TOP_STORIES_URL =\r\n  'https://hacker-news.firebaseio.com/v0/topstories.json';\r\n\r\nexport const STORY_PATH = 'https://hacker-news.firebaseio.com/v0/item/';\r\n","import React, { Component } from 'react';\r\n\r\nimport './style.css';\r\n\r\nclass Pagination extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Pagination\">\r\n        <button onClick={this.props.handlePrevClick}>\r\n          <i class=\"fas fa-chevron-circle-left fa-2x\"></i>\r\n        </button>\r\n        {<h3 className=\"currentPage\">Page: {this.props.currentPageNumber}</h3>}\r\n        <button onClick={this.props.handleNextClick}>\r\n          <i class=\"fas fa-chevron-circle-right fa-2x\"></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nconst CommentItem = props => {\r\n  const { by, text, kids } = props;\r\n  return (\r\n    <div className=\"CommentItem\">\r\n      <div className=\"Info\">\r\n        <p className=\"author\">@{by}</p>\r\n        <blockquote\r\n          className=\"comment__text\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: text,\r\n          }}\r\n        ></blockquote>\r\n      </div>\r\n\r\n      {kids}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","import React, { Component } from 'react';\r\n\r\nimport CommentItem from './CommentItem';\r\nimport API from '../../services/API';\r\n\r\nimport './style.css';\r\nimport Loader from '../common/Loader';\r\nclass CommentsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      kids: this.props.kids,\r\n      comments: [],\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchComments();\r\n  }\r\n\r\n  fetchComments = async () => {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    this.state.kids.map(comment =>\r\n      API.fetchUrl(\r\n        `https://hacker-news.firebaseio.com/v0/item/${comment}.json`\r\n      ).then(comment => {\r\n        this.setState({\r\n          isLoading: false,\r\n          comments: [...this.state.comments, comment],\r\n        });\r\n      })\r\n    );\r\n\r\n    //  let promises = this.state.kids.map(comment =>\r\n    //    API.fetchUrl(`https://hacker-news.firebaseio.com/v0/item/${comment}.json`)\r\n    //  );\r\n\r\n    //  Promise.all(promises).then(comments => {\r\n    //    this.setState({\r\n    //      comments: comments,\r\n    //    });\r\n    //  });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <Loader style={{ width: '80px', textAlign: 'center' }} />;\r\n    }\r\n    return (\r\n      <div className=\"CommentsList\">\r\n        {this.state.comments.map(({ id, by, text, kids }) => (\r\n          <CommentItem\r\n            key={id}\r\n            by={by}\r\n            text={text}\r\n            kids={kids ? <CommentsList kids={kids} /> : null}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentsList;\r\n","import React, { Component } from 'react';\r\n\r\nimport './style.css';\r\n\r\nexport default class Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isVisible: this.props.isVisible,\r\n    };\r\n  }\r\n  handleModalClick = e => {\r\n    if (e.target.className.includes('Modal')) {\r\n      this.setState({\r\n        isVisible: false,\r\n      });\r\n      this.props.handleModalClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { url, title } = this.props;\r\n    return (\r\n      <div\r\n        className={`Modal ${this.state.isVisible ? '' : 'hide'}`}\r\n        onClick={e => this.handleModalClick(e)}\r\n      >\r\n        <div className=\"Modal__content\">\r\n          <div className=\"Modal__header\">\r\n            <a href={url}>\r\n              <h2 className=\"header\">{title}</h2>\r\n            </a>\r\n          </div>\r\n\r\n          <div className=\"Modal__body\">{this.props.body}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n// Import Components\r\nimport NewsItem from './NewsItem';\r\nimport Pagination from './Pagination';\r\nimport CommentsList from '../CommentsList';\r\nimport Modal from '../common/Modal';\r\nimport Loader from '../common/Loader';\r\n\r\nimport API from '../../services/API';\r\n\r\n// Import Constants\r\nimport * as constant from '../../constants/constants';\r\n\r\n// Import Styles\r\nimport './style.css';\r\n\r\nclass NewsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      newsIdList: [],\r\n      isLoading: false,\r\n      selectedItem: null,\r\n      currentPageNumber: this.props.pageNumber || 1,\r\n    };\r\n  }\r\n\r\n  fetchNews = () => {\r\n    this.setState({ isLoading: true });\r\n\r\n    // After NewsID is fetched , set state\r\n    API.fetchUrl(constant.TOP_STORIES_URL).then(newsIdList => {\r\n      this.setState({ newsIdList: newsIdList, isLoading: false });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchNews();\r\n  }\r\n\r\n  handlePageNav = offset => {\r\n    this.setState({\r\n      currentPageNumber: this.state.currentPageNumber + offset,\r\n    });\r\n  };\r\n\r\n  handlePrevClick = () => {\r\n    if (this.state.currentPageNumber >= 2) {\r\n      this.handlePageNav(-1);\r\n    }\r\n  };\r\n\r\n  setCurrentNewsId = selectedItem => {\r\n    this.setState({\r\n      selectedItem: selectedItem,\r\n    });\r\n  };\r\n\r\n  handleNextClick = () => {\r\n    if (\r\n      (this.state.currentPageNumber + 1) * constant.ITEMS_PER_PAGE <=\r\n      this.state.newsIdList.length\r\n    ) {\r\n      this.handlePageNav(1);\r\n    }\r\n  };\r\n\r\n  handleModalClick = () => {\r\n    this.setState({\r\n      selectedItem: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { currentPageNumber, isLoading, selectedItem } = this.state;\r\n\r\n    return (\r\n      <div className=\"NewsList\">\r\n        <Pagination\r\n          handlePrevClick={this.handlePrevClick}\r\n          handleNextClick={this.handleNextClick}\r\n          currentPageNumber={currentPageNumber}\r\n        />\r\n        {isLoading && <Loader width=\"80px\" height=\"80px\" />}\r\n\r\n        {\r\n          <ul className=\"NewsList__items\">\r\n            {this.state.newsIdList\r\n              .slice(\r\n                (currentPageNumber - 1) * constant.ITEMS_PER_PAGE,\r\n                currentPageNumber * constant.ITEMS_PER_PAGE\r\n              )\r\n              .map(newsId => (\r\n                <NewsItem\r\n                  key={newsId}\r\n                  id={newsId}\r\n                  setCurrentNewsId={this.setCurrentNewsId}\r\n                />\r\n              ))}\r\n          </ul>\r\n        }\r\n\r\n        {selectedItem ? (\r\n          <Modal\r\n            body={<CommentsList kids={selectedItem.kids} />}\r\n            title={selectedItem.title}\r\n            url={selectedItem.url}\r\n            isVisible={true}\r\n            handleModalClick={this.handleModalClick}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewsList;\r\n","import React, { Component } from 'react';\r\n\r\n// Import Layout Components\r\nimport Header from './shared/Header';\r\nimport Main from './shared/Main';\r\nimport Footer from './shared/Footer';\r\n\r\nimport NewsList from './components/NewsList';\r\n\r\n// Import AppStyles\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App \">\r\n        <Header>Hacker News</Header>\r\n        <Main className=\"container\">\r\n          <NewsList />\r\n        </Main>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}